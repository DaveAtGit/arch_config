# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see http://i3wm.org/docs/userguide.html for a complete reference!

set $mod Mod4

exec --no-startup-id xcompmgr -c -C -r0 -l0 -t0 &

# TODO delete
exec i3-sensible-terminal -e ". ~/scripts/.i3init"

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
font pango:DejaVu Sans Mono For Powerline 8
# TODO any difference???
#font pango:DejaVu Sans Mono 8
# Before i3 v4.8, we used to recommend this one as the default:
# font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
# The font above is very space-efficient, that is, it looks good, sharp and
# clear in small sizes. However, its unicode glyph coverage is limited, the old
# X core fonts rendering does not support right-to-left and this being a bitmap
# font, it doesn’t scale on retina/hidpi displays.

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindsym $mod+Return exec i3-sensible-terminal

# kill focused window
bindsym $mod+Shift+q kill

# start dmenu (a program launcher
#bindsym $mod+d exec dmenu_run
# There also is the (new) i3-dmenu-desktop which only displays applications
# shipping a .desktop file. It is a wrapper around dmenu, so you need that
# installed.
# bindsym $mod+d exec --no-startup-id i3-dmenu-desktop

# change focus
bindsym $mod+j focus down
bindsym $mod+k focus up
#bindsym $mod+l focus up
#bindsym $mod+semicolon focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
#bindsym $mod+Shift+j move left
#bindsym $mod+Shift+k move down
#bindsym $mod+Shift+l move up
#bindsym $mod+Shift+semicolon move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+h split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen

# change container layout (stacked, tabbed, toggle split)
#bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+p focus parent

# focus the child container
bindsym $mod+o focus child

# windows
new_window 1pixel
new_float normal

assign [class="Chromium"] $w2
assign [class="Vlc"] $w5
#assign [class="MuPDF"] $w5
assign [class="Kodi"] "[ kodi ]"
for_window [class="qutebrowser"] floating enable

# generic workspace switch
bindsym $mod+Ctrl+Right workspace next
bindsym $mod+Ctrl+Left workspace prev

bindsym $mod+Ctrl+Shift+Right move container to workspace next
bindsym $mod+Ctrl+Shift+Left move container to workspace prev

workspace_auto_back_and_forth yes

# workspace names
# fancy symbols: 57504,57505,57506,57520,57521,57522, 57523
#                    ,    ,    ,    ,    ,    ,     
#set $w1 ...
#set $w2 ..:
#set $w3 .:.
#set $w4 .::
#set $w5 :..
#set $w6 :.:
#set $w7 ::.
#set $w8 :::
#set $w9 ..-
#set $w0 .-.

set $w1 "0:[ t ]"
set $w2 "1:[ w ]"
set $w3 "2:[ d ]"
set $w4 "3:[ d ]"
set $w5 "4:[ m ]"
set $w6 "5:[ . ]"
set $w7 "6:[ : ]"
set $w8 "7:[ , ]"
set $w9 "8:[ ; ]"
set $w0 "9:[ ~ ]"
set $wscr "100:[ - ]"

#set $w1 
#set $w2 w³
#set $w3 d¹
#set $w4 d²
#set $w5 
#set $w6 ±
#set $w7 ·
#set $w8 ǁ
#set $w9 ×
#set $w0 °

# switch to workspace
bindsym $mod+1 workspace $w1
bindsym $mod+2 workspace $w2
bindsym $mod+3 workspace $w3
bindsym $mod+4 workspace $w4
bindsym $mod+5 workspace $w5
bindsym $mod+6 workspace $w6
bindsym $mod+7 workspace $w7
bindsym $mod+8 workspace $w8
bindsym $mod+9 workspace $w9
bindsym $mod+0 workspace $w0
bindsym $mod+minus workspace $wscr

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace $w1
bindsym $mod+Shift+2 move container to workspace $w2
bindsym $mod+Shift+3 move container to workspace $w3
bindsym $mod+Shift+4 move container to workspace $w4
bindsym $mod+Shift+5 move container to workspace $w5
bindsym $mod+Shift+6 move container to workspace $w6
bindsym $mod+Shift+7 move container to workspace $w7
bindsym $mod+Shift+8 move container to workspace $w8
bindsym $mod+Shift+9 move container to workspace $w9
bindsym $mod+Shift+0 move container to workspace $w0

# move to other output
mode "monitor" {
	bindsym Left move container to output left
	bindsym Right move container to output right
	bindsym Up move container to output up
	bindsym Down move container to output down

	bindsym Shift+Left move workspace to output left
	bindsym Shift+Right move workspace to output right
	bindsym Shift+Up move workspace to output up
	bindsym Shift+Down move workspace to output down

	bindsym Return mode "default"
	bindsym Escape mode "default"
}
bindsym $mod+Shift+m mode "monitor"
# bindsym $mod+o move container to output right
# bindsym $mod+Shift+o move workspace to output right
# bindsym $mod+p move container to output VGA1
# bindsym $mod+Shift+p move container to HDMI1

# scratchpad
bindsym $mod+Shift+s move scratchpad
bindsym $mod+s scratchpad show

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -b 'Yes, exit i3' 'i3-msg exit'"

# resize window (you can also use the mouse for that)
mode "resize" {
    bindsym Left resize shrink width 10 px or 10 ppt
    bindsym Down resize grow height 10 px or 10 ppt
    bindsym Up resize shrink height 10 px or 10 ppt
    bindsym Right resize grow width 10 px or 10 ppt

    bindsym Shift+Up move up 10px
    bindsym Shift+Down move down 10px
    bindsym Shift+Left move left 10px
    bindsym Shift+Right move right 10px
    # back to normal: Enter or Escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

bindsym $mod+r mode "resize"

# Colors
set $lgreen #15AA15
set $dgreen #003300
set $mgreen #005500
set $dgray  #333333
set $lgray  #888888
set $red    #FF6615

client.focused           $lgreen $lgreen $dgreen $lgreen
client.unfocused         $dgray  $dgray  $lgray  $dgray
client.focused_inactive  $dgreen $dgreen $lgray  $dgreen
client.urgent            $red    $red    $dgray  $red

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
    font pango:DejaVu Sans Mono For Powerline 8
	strip_workspace_numbers yes

	#mode hide
	#hidden_state hide
	#modifier $mod
	#separator_symbol "╱"
	#separator_symbol ""

    colors {
        focused_workspace   $lgreen $lgreen $dgreen
        active_workspace    $dgreen $dgreen $lgray
        inactive_workspace  $dgray  $dgray  $lgray
        urgent_workspace    $red    $red    $dgray
    }
    #status_command i3status -c ~/.i3/.i3status.conf
    #status_command bash ~/.i3/i3pystatus.sh
    status_command bash ~/coding/misc/statusbar/bar.sh
    position top
}

# DMenu
bindsym $mod+d exec dmenu_run -i -h 18 -nb "#000" -sf "#000" -nf "$lgreen" -sb "$lgreen"
bindsym $mod+Shift+d exec eval `cat ~/scripts/.runnables | dmenu -i -h 18 -nb "#000" -sf "#000" -nf "$lgreen" -sb "$lgreen"`

# Dunst (notification server)
#bindsym $mod+Mod1+d exec eval `echo -e 'pause\nresume' | dmenu -i -h 18 -nb "#000" -sf "#000" -nf "$lgreen" -sb "$lgreen" -p "dunst:" | { read x; [[ "$x" == "pause" ]] && killall -SIGUSR1 dunst || killall -SIGUSR2 dunst; }`
bindsym $mod+Mod1+d exec eval `echo -e 'killall -SIGUSR1 dunst # pause\nkillall -SIGUSR2 dunst # resume' | dmenu -i -l 2 -nb "#000" -sf "#000" -nf "$lgreen" -sb "$lgreen" -p "dunst:"`

# Complex commands
bindsym $mod+c exec eval $(cat ~/scripts/.complex | dmenu -i -nb "#000" -sf "#000" -nf "$lgreen" -sb "$lgreen" -l 6 -p "command:")

# Dynamic workspaces
bindsym $mod+z exec i3-input -F 'workspace "%s"' -P 'Workspace: '
bindsym $mod+Shift+z exec ~/scripts/.workspaces.py -l | dmenu -i -h 18 -nb "#000" -sf "#000" -nf "$lgreen" -sb "$lgreen" -p "workspaces:" | ~/scripts/.workspaces.py --

# Monitor-setting
bindsym $mod+m exec ~/scripts/.monitors -i -h 18 -nb "#000" -sf "#000" -nf "$lgreen" -sb "$lgreen"

# Backlight
bindsym $mod+b exec eval $(dmenu -i -h 18 -nb "#000" -sf "#000" -nf "$lgreen" -sb "$lgreen" -p "xbacklight =" | echo xbacklight -set $(awk '{print $0}'))

# Screenlock
bindsym $mod+l exec "i3lock -e -c 003300 & systemctl suspend"
bindsym XF86Sleep exec "i3lock -e -c 003300 & systemctl suspend"

# Meta-Keys
bindsym XF86MonBrightnessUp exec xbacklight -inc 2.5 -time 50
bindsym XF86MonBrightnessDown exec xbacklight -dec 2.5 -time 50

bindsym XF86AudioRaiseVolume exec amixer sset Master '5%+'
bindsym XF86AudioLowerVolume exec amixer sset Master '5%-'
bindsym XF86AudioMute exec amixer sset Master toggle
